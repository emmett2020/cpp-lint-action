name: Build and Run Unit Tests on Ubuntu 24.04
on:
  pull_request:
    branches: [master]

env:
  NINJA_VERSION: 1.12.1
  CCACHE_VERSION: 4.10.2

jobs:
  build-unit-tests:
    name: "ubuntu-24.04-${{ matrix.compiler }}-${{ matrix.version }}"
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # Details: https://github.com/actions/runner-images
          - { compiler: "gcc",   version: "12.3.0" }
          - { compiler: "gcc",   version: "14.2.0" }
          - { compiler: "clang", version: "16.1.6" }
          - { compiler: "clang", version: "18.1.3" }

    steps:
      - name: Prepare for Building
        id: prepare
        run: |
          # Add Building Tools Path to GITHUB Path
          echo "${HOME}/.tools" >> ${GITHUB_PATH}

          # Set timestamp
          timestamp=$(date +"%Y-%m-%d %H:%M:%S")
          echo "timestamp=${timestamp}" >> ${GITHUB_OUTPUT}

      - name: Cache and Restore Building Tools
        id: cache-building-tools
        uses: actions/cache@v4
        with:
          path: ~/.tools/
          key: building-tools-${{ runner.os }}
          restore-keys: building-tools-${{ runner.os }}

      - name: Install Building Tools
        if: "${{ steps.cache-building-tools.outputs.cache-hit == false }}"
        run: bash ./.github/workflows/scripts/install_building_tools.sh

      - name: Install Building Libraries
        run:  sudo apt-get install -y libboost-all-dev libgit2-dev

      - name: Setup C/C++ Compiler and ccache
        run: |
          set -euo pipefail
          major=$(echo ${{ matrix.version }} | cut -d'.' -f1)
          if [[ "${{ matrix.compiler }}" == "clang" ]]; then
            echo "CC=clang-${major}" >> ${GITHUB_ENV}
            echo "CXX=clang++-${major}" >> ${GITHUB_ENV}
          else
            echo "CC=gcc-${major}" >> ${GITHUB_ENV}
            echo "CXX=g++-${major}" >> ${GITHUB_ENV}
          fi

          ccache --version
          ccache --set-config=max_size=500M

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache and Restore ccache
        id: ccache-cache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ matrix.compiler }}-${{ matrix.version }-${{ steps.prepare.outputs.timestamp }}
          restore-keys: |
            ccache-${{ matrix.compiler }}-${{ matrix.version }}-

      - name: Create Build Directory
        run: mkdir -p build

      - name: Cache and Restore CMake FetchContent
        id: cmake-fetchcontent-cache
        uses: actions/cache@v4
        with:
          path: build/_deps/
          key: cmake-fetchcontent-${{ matrix.compiler }}-${{ matrix.version }}-${{ steps.prepare.outputs.timestamp }}
          restore-keys: |
            cmake-fetchcontent-${{ matrix.compiler }}-${{ matrix.version }}-

      - name: Compile
        run: |
          set -euo pipefail
          cmake -S . -B build -GNinja              \
            -DCMAKE_BUILD_TYPE=Release             \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache     \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

          cmake --build build -v -j`nproc`
          ccache -s -v

      - name: Run Unit Tests
        run: ./build/tests/test
